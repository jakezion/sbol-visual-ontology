name: Ontology update testing

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ github.token }}
          ref: ${{ github.head_ref }}

      - name: see ref
        run: echo ${{ github.head_ref }}

      # get latest release tag on the SBOL-visual repository
      - name: Get latest release of SBOL Visual
        uses: rez0n/actions-github-release@main
        id: sbol-visual-release
        env:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: "SynBioDex/SBOL-visual"
          type: "latest"

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
          architecture: 'x64'

      # python dependencies for markdown-to-owl are installed
      - name: Install python dependencies
        run: |
          cd markdown-to-owl
          pip3 install owlready2
          pip3 install rdflib

      # maven dependencies for LODE installed
      - name: Install LODE dependencies
        run: |
          cd LODE
          mvn clean install

      # maven dependencies for lode-document-extractor installed
      - name: Install maven dependencies
        run: |
          cd lode-document-extractor
          mvn clean install

      # maven dependencies for sbol-vo-update-doc are installed
      - name: Install maven dependencies
        run: |
          cd sbol-vo-update-doc
          mvn clean install

      # create temporary folder for html and rdf files
      - name: create temporary folder
        run: |
          mkdir -p temp_files
          cp -u ./sbol-vo.html ./sbol-vo.rdf ./sbol-vo.txt   ./temp_files
          cp -u -r ./Glyphs ./temp_files
          ls ./temp_files

      # create glyph folder for use within python scripts
      - name: create default Glyph folder
        run: |
          svn export --force https://github.com/SynBioDex/SBOL-visual/tags/${{ steps.sbol-visual-release.outputs.release }}/Glyphs

      # scripts are called in succession: 1. rdf file is updated 2. HTML file is created with default values 3. updated rdf file is used to update HTML file
      - name: Generate new ontology values
        run: |
          cd markdown-to-owl
          python Application.py

          cd ../lode-document-extractor
          mvn exec:java -Dexec.mainClass="lodedocumentextractor"

          cd ../sbol-vo-update-doc
          mvn exec:java -e -Dexec.mainClass="uk.ac.keele.dissys.sbolvo.html.App"

      # 1. versions folder is updated with new tag value 2. parent html, rdf and glyphs files are copied to new versions folder 3. glyph folder is created at parent directory for use in web service
      - name: create and populate version folder
        run: |
          mkdir -p versions/v${{ steps.sbol-visual-release.outputs.release }}
          cp -u ./sbol-vo.html ./sbol-vo.rdf ./versions/v${{ steps.sbol-visual-release.outputs.release }}
          svn copy ./Glyphs ./versions/v${{ steps.sbol-visual-release.outputs.release }}
          ls ./Glyphs

        # if tag is not stable update default files to original versions
      - name: restore default files
        run: |
          cp -u ./temp_files/sbol-vo.html ./sbol-vo.html
          cp -u ./temp_files/sbol-vo.rdf ./sbol-vo.rdf
          cp -u ./temp_files/sbol-vo.txt ./sbol-vo.txt
          cp -u -r ./temp_files/Glyphs ./Glyphs

        # if tag is stable delete temp files
      - name: delete temporary folder
        run: rm -r ./temp_files

        # updated are committed and pushed to the repository on current branch (looping doesnt occur due to limitations in github actions)
        if: ${{ !failure() }}
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Created new versions folder and updated default html and rdf file
